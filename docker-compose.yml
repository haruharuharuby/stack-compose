version: "3.5"

services:

  ###
  # Frontend
  ###
  traefik:
    image: traefik:v1.5.1-alpine
    command:
      - --api
      - --docker
      - --docker.watch
      - --docker.constraints=tag==web
      - --entryPoints=Name:http Address::80 Compress::true
      - --defaultEntryPoints=http
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/null:/traefik.toml:rw
    ports:
      - "80:80"
      - "8080:8080"  # Traefik Frontend
      - "443:443"

  app:
    # image: asyncy/platform-app
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=app"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: app.${DNS}"
    ports:
      - "8080"
    volumes:
      - ./mock/app:/var/www

  hub:
    # image: asyncy/platform-hub
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=hub"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: hub.${DNS}"
    ports:
      - "8080"
    volumes:
      - ./mock/hub:/var/www

  bootstrap:
    # image: asyncy/platform-bootstrap
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=bootstrap"
      - "traefik.port=8080"
    ports:
      - "8080"
    volumes:
      - ./mock/bootstrap:/var/www
    links:
      - metabase
      - postgres
      # - grafana

  api-rest:
    # image: asyncy/platform-api-rest
    # command: server --public
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=api-rest"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: api.${DNS}"
    ports:
      - "8080"
    volumes:
      - ./mock/api-rest:/var/www
    links:
      - postgres
      - mongodb
      - rabbitmq

  api-graphql:
    # image: asyncy/platform-api-graphql
    # command: server --public
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=api-graphql"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: api.${DNS}; PathPrefix: /graphql"
    ports:
      - "8080"
    volumes:
      - ./mock/api-graphql:/var/www
    links:
      - postgres

  ###
  # Management
  ###
  metabase:
    image: metabase/metabase
    labels:
      - "traefik.tags=web"
      - "traefik.backend=metabase"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: metabase.${DNS}"
    ports:
      - "3000"
    links:
      - postgres
      - mongodb
      - rabbitmq
    volumes:
      - metabase-volume:/metabase-data

  ###
  # Backend
  ###
  api-private:
    # image: asyncy/platform-api-rest
    # command: server --private
    image: trinitronx/python-simplehttpserver
    ports:
      - "8080"
    volumes:
      - ./github.pem:/github.pem:ro
      - ./mock/api-private:/var/www
    links:
      - postgres
      - mongodb
      - rabbitmq
    depends_on:
      - postgres

  engine:
    image: asyncy/platform-engine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:  # [TODO] remove if @jacoco set to default
      broker: amqp://rabbitmq:rabbitmq@rabbitmq:5672//
      database: postgres://postgres:@postgres:5432/postgres
      mongo: mongodb://mongo:27017
    links:
      - api-private
      - rabbitmq
      - mongodb
    depends_on:
      - api-private
      - rabbitmq
      - mongodb

  postgres:
    image: postgres:10.3-alpine
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.7.3-alpine
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq

  mongodb:
    image: mongo:3.6.3
    command: mongod --smallfiles --logpath=/dev/null
    environment:
      # - MONGO_DATA_DIR=/data/db
      # - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER=admin
      - MONGODB_PASS=admin
    volumes:
      - mongodb-volume:/data/db

volumes:
  postgres-volume:
  rabbitmq-volume:
  mongodb-volume:
  metabase-volume:
