version: "3.5"

services:

  ###
  # Frontend
  ###
  traefik:
    image: traefik:v1.5.1-alpine
    command:
      - --api
      - --docker
      - --docker.watch
      - --docker.constraints=tag==web
      - --entryPoints=Name:http Address::80 Compress::true
      - --defaultEntryPoints=http
      - --metrics
      - --metrics.statsd
      - --metrics.statsd.address=statsd:8125
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /dev/null:/traefik.toml:rw
    ports:
      - "80:80"
      - "8080:8080"  # Traefik Frontend
      - "443:443"
    networks:
      - asyncy-frontend
      - asyncy-backend

  app:
    # image: asyncy/platform-app
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=app"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: app.${DNS:-asyncy.net}"
    ports:
      - "8080"
    volumes:
      - ./mock/app:/var/www
    networks:
      - asyncy-frontend

  hub:
    # image: asyncy/platform-hub
    image: trinitronx/python-simplehttpserver
    labels:
      - "traefik.tags=web"
      - "traefik.backend=hub"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host: hub.${DNS:-asyncy.net}"
    ports:
      - "8080"
    volumes:
      - ./mock/hub:/var/www
    networks:
      - asyncy-frontend

  bootstrap:
    image: asyncy/platform-bootstrap
    labels:
      - "traefik.tags=web"
      - "traefik.backend=bootstrap"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host: ${DNS:-asyncy.net}"
    environment:
      DNS: ${DNS:-asyncy.net}
    depends_on:
      - postgres
      - metabase
    ports:
      - "5000"
    networks:
      - asyncy-frontend
      - asyncy-backend

  graphql:
    image: asyncy/platform-graphql
    labels:
      - "traefik.tags=web"
      - "traefik.backend=graphql"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host: api.${DNS:-asyncy.net}; PathPrefix: /graphql, /graphiql, /_postgraphile"
    ports:
      - "5000"
    depends_on:
      - postgres
    networks:
      - asyncy-frontend
      - asyncy-backend

  ###
  # Management
  ###
  metabase:
    image: metabase/metabase
    labels:
      - "traefik.tags=web"
      - "traefik.backend=metabase"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: metabase.${DNS:-asyncy.net}"
    ports:
      - "3000"
    volumes:
      - metabase-volume:/metabase-data
    networks:
      - asyncy-backend

  ###
  # Backend
  ###
  graphql-private:
    image: asyncy/platform-graphql
    ports:
      - "5000"
    depends_on:
      - postgres
    networks:
      - asyncy-backend

  engine:
    image: asyncy/platform-engine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - rabbitmq
      - redis
    environment:
      - logger_name=asyncy
      - logger_level=warning
      - logdna_key=ingestion_key
    networks:
      - asyncy-backend

  postgres:
    image: postgres:10.3-alpine
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - asyncy-backend

  rabbitmq:
    image: rabbitmq:3.7.3-alpine
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    networks:
      - asyncy-backend

  redis:
    image: redis:alpine
    volumes:
      - redis-volume:/data
    networks:
      - asyncy-backend

  graphite-statsd:
    image: graphiteapp/docker-graphite-statsd:DZ-0.10-1.1.2
    labels:
      - "traefik.tags=web"
      - "traefik.backend=graphite"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host: graphite.${DNS:-asyncy.net}"
    volumes:
      - whisper-volume:/opt/graphite/storage/whisper
    ports:
      - "80"
      - "2003-2004"
      - "2023-2024"
      - "8125/udp"
      - "8126"
    networks:
      asyncy-backend:
        aliases:
          - statsd
          - graphite
          - carbon

  grafana:
    image: asyncy/platform-grafana:5.0.4
    labels:
      - "traefik.tags=web"
      - "traefik.backend=grafana"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host: grafana.${DNS:-asyncy.net}"
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - "3000"
    networks:
      - asyncy-backend

volumes:
  postgres-volume:
  rabbitmq-volume:
  redis-volume:
  metabase-volume:
  whisper-volume:
  grafana-volume:

networks:
  asyncy-frontend:
    driver: bridge
  asyncy-backend:
    driver: bridge
